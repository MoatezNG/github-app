{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moate\\\\OneDrive\\\\Desktop\\\\Tests\\\\github-app\\\\src\\\\client\\\\containers\\\\RepositoriesList\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport RepositoryDetailsModal from 'client/components/RepositoryDetailsModal';\nimport { sortOptions } from 'client/constants/sortOptions';\nimport React, { useState } from 'react';\nimport { Card, Input, Modal, Pagination, Select } from 'semantic-ui-react';\nimport { useRepositoriesList } from './useRepositoriesList';\n\nconst RepositoriesList = () => {\n  const {\n    activePage,\n    onSearch,\n    handleNextPage,\n    totalPages,\n    loading,\n    onMarkRepository,\n    onSort,\n    paginatedData\n  } = useRepositoriesList();\n  const [open, setOpen] = React.useState(false);\n  const {\n    0: selectedRepository,\n    1: setSelectedRepository\n  } = useState();\n\n  const onShowMoreDetails = repository => {\n    setSelectedRepository(repository);\n    setOpen(true);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"space-between py-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    onChange: onSearch,\n    loading: loading,\n    placeholder: \"Search...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), __jsx(Select, {\n    onChange: onSort,\n    placeholder: \"Select your sort\",\n    options: sortOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), __jsx(Card.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, paginatedData === null || paginatedData === void 0 ? void 0 : paginatedData.map(rep => __jsx(RepositoryCard, {\n    showMoreDetails: onShowMoreDetails,\n    key: rep.id,\n    onFavorite: onMarkRepository,\n    repository: rep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    className: \"center py-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(Pagination, {\n    onPageChange: handleNextPage,\n    defaultActivePage: activePage,\n    totalPages: totalPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), selectedRepository && __jsx(Modal, {\n    onClose: () => setOpen(false),\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(RepositoryDetailsModal, {\n    repository: selectedRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default RepositoriesList;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/containers/RepositoriesList/index.tsx"],"names":["RepositoryCard","RepositoryDetailsModal","sortOptions","React","useState","Card","Input","Modal","Pagination","Select","useRepositoriesList","RepositoriesList","activePage","onSearch","handleNextPage","totalPages","loading","onMarkRepository","onSort","paginatedData","open","setOpen","selectedRepository","setSelectedRepository","onShowMoreDetails","repository","map","rep","id"],"mappings":";;AAAA,OAAOA,cAAP,MAA2B,kCAA3B;AACA,OAAOC,sBAAP,MAAmC,0CAAnC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,UAA7B,EAAyCC,MAAzC,QAAuD,mBAAvD;AACA,SAASC,mBAAT,QAAoC,uBAApC;;AAEA,MAAMC,gBAA0B,GAAG,MAAM;AACvC,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,cAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,gBANI;AAOJC,IAAAA,MAPI;AAQJC,IAAAA;AARI,MASFT,mBAAmB,EATvB;AAWA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBlB,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM;AAAA,OAACkB,kBAAD;AAAA,OAAqBC;AAArB,MAA8CnB,QAAQ,EAA5D;;AACA,QAAMoB,iBAAiB,GAAIC,UAAD,IAA4B;AACpDF,IAAAA,qBAAqB,CAACE,UAAD,CAArB;AACAJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,QAAQ,EAAER,QAAjB;AAA2B,IAAA,OAAO,EAAEG,OAApC;AAA6C,IAAA,WAAW,EAAC,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEE,MAAlB;AAA0B,IAAA,WAAW,EAAC,kBAAtC;AAAyD,IAAA,OAAO,EAAEhB,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,aADH,aACGA,aADH,uBACGA,aAAa,CAAEO,GAAf,CAAoBC,GAAD,IAClB,MAAC,cAAD;AACE,IAAA,eAAe,EAAEH,iBADnB;AAEE,IAAA,GAAG,EAAEG,GAAG,CAACC,EAFX;AAGE,IAAA,UAAU,EAAEX,gBAHd;AAIE,IAAA,UAAU,EAAEU,GAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CALF,EAeE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,YAAY,EAAEb,cADhB;AAEE,IAAA,iBAAiB,EAAEF,UAFrB;AAGE,IAAA,UAAU,EAAEG,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAfF,EAsBGO,kBAAkB,IACjB,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,KAAD,CAA7B;AAAsC,IAAA,IAAI,EAAED,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,sBAAD;AAAwB,IAAA,UAAU,EAAEE,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAvBJ,CADF;AA8BD,CAhDD;;AAkDA,eAAeX,gBAAf","sourcesContent":["import RepositoryCard from 'client/components/RepositoryCard';\nimport RepositoryDetailsModal from 'client/components/RepositoryDetailsModal';\nimport { sortOptions } from 'client/constants/sortOptions';\nimport { Repository } from 'models/Repository';\nimport React, { useState } from 'react';\nimport { Card, Input, Modal, Pagination, Select } from 'semantic-ui-react';\nimport { useRepositoriesList } from './useRepositoriesList';\n\nconst RepositoriesList: React.FC = () => {\n  const {\n    activePage,\n    onSearch,\n    handleNextPage,\n    totalPages,\n    loading,\n    onMarkRepository,\n    onSort,\n    paginatedData,\n  } = useRepositoriesList();\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedRepository, setSelectedRepository] = useState<Repository | undefined>();\n  const onShowMoreDetails = (repository: Repository) => {\n    setSelectedRepository(repository);\n    setOpen(true);\n  };\n  return (\n    <div>\n      <div className=\"space-between py-1\">\n        <Input onChange={onSearch} loading={loading} placeholder=\"Search...\" />\n        <Select onChange={onSort} placeholder=\"Select your sort\" options={sortOptions} />\n      </div>\n      <Card.Group>\n        {paginatedData?.map((rep) => (\n          <RepositoryCard\n            showMoreDetails={onShowMoreDetails}\n            key={rep.id}\n            onFavorite={onMarkRepository}\n            repository={rep}\n          />\n        ))}\n      </Card.Group>\n      <div className=\"center py-1\">\n        <Pagination\n          onPageChange={handleNextPage}\n          defaultActivePage={activePage}\n          totalPages={totalPages}\n        />\n      </div>\n      {selectedRepository && (\n        <Modal onClose={() => setOpen(false)} open={open}>\n          <RepositoryDetailsModal repository={selectedRepository} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default RepositoriesList;\n"]},"metadata":{},"sourceType":"module"}