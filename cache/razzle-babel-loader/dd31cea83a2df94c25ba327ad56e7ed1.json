{"ast":null,"code":"import { useState } from 'react';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport var usePagination = function usePagination(data, limit) {\n  var _useState = useState(1),\n      activePage = _useState[0],\n      setActivePage = _useState[1];\n\n  var handleNextPage = function handleNextPage(_, props) {\n    setActivePage(props.activePage);\n  };\n\n  return {\n    handleNextPage: handleNextPage,\n    activePage: activePage,\n    totalPages: Math.ceil(data.total_count / limit)\n  };\n};","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/hooks/usePagination.ts"],"names":["useState","usePagination","data","limit","activePage","setActivePage","handleNextPage","_","props","totalPages","Math","ceil","total_count"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAIA;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAC3BC,IAD2B,EAE3BC,KAF2B,EAOxB;AACH,kBAAoCH,QAAQ,CAAC,CAAD,CAA5C;AAAA,MAAOI,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAyCC,KAAzC,EAAoE;AACzFH,IAAAA,aAAa,CAACG,KAAK,CAACJ,UAAP,CAAb;AACD,GAFD;;AAIA,SAAO;AACLE,IAAAA,cAAc,EAAdA,cADK;AAELF,IAAAA,UAAU,EAAVA,UAFK;AAGLK,IAAAA,UAAU,EAAEC,IAAI,CAACC,IAAL,CAAUT,IAAI,CAACU,WAAL,GAAmBT,KAA7B;AAHP,GAAP;AAKD,CAnBM","sourcesContent":["import { useState } from 'react';\nimport { PaginationProps } from 'semantic-ui-react';\nimport { PaginatedResponse } from 'types/utils';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const usePagination = <T extends Record<string, any>>(\n  data: PaginatedResponse<T>,\n  limit: number,\n): {\n  handleNextPage: (_: React.MouseEvent<HTMLAnchorElement>, props: PaginationProps) => void;\n  activePage: number;\n  totalPages: number;\n} => {\n  const [activePage, setActivePage] = useState(1);\n\n  const handleNextPage = (_: React.MouseEvent<HTMLAnchorElement>, props: PaginationProps) => {\n    setActivePage(props.activePage as number);\n  };\n\n  return {\n    handleNextPage,\n    activePage,\n    totalPages: Math.ceil(data.total_count / limit),\n  };\n};\n"]},"metadata":{},"sourceType":"module"}