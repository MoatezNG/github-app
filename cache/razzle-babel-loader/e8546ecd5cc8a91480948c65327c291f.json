{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moate\\\\OneDrive\\\\Desktop\\\\Tests\\\\github-app\\\\src\\\\server.tsx\";\nvar __jsx = React.createElement;\nimport store from 'client/_redux/app/store';\nimport express from 'express';\nimport React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport { Provider } from 'react-redux';\nimport { StaticRouter } from 'react-router-dom';\nimport backendRoutes from 'server/routes';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './client/App';\nlet assets;\n\nconst syncLoadAssets = () => {\n  assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n};\n\nsyncLoadAssets(); //@ts-ignore\n\nconst cssLinksFromAssets = (assets, entrypoint) => assets[entrypoint] ? assets[entrypoint].css ? assets[entrypoint].css //@ts-ignore\n.map(asset => `<link rel=\"stylesheet\" href=\"${asset}\">`).join('') : '' : ''; //@ts-ignore\n\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => assets[entrypoint] ? assets[entrypoint].js ? assets[entrypoint].js //@ts-ignore\n.map(asset => `<script src=\"${asset}\"${extra}></script>`).join('') : '' : '';\n\nexport const renderApp = (req, res) => {\n  const context = {};\n  const markup = renderToString(__jsx(StaticRouter, {\n    context: context,\n    location: req.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }))));\n\n  if (context.url) {\n    return {\n      redirect: context.url\n    };\n  }\n\n  const html = // prettier-ignore\n  `<!doctype html>\n    <html lang=\"\">\n    <head>\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta charSet='utf-8' />\n        <title>Welcome to Razzle</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        ${cssLinksFromAssets(assets, 'client')}\n    </head>\n    <body>\n        <div id=\"root\">${markup}</div>\n        ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n    </body>\n  </html>`;\n  return {\n    html\n  };\n};\nconst server = express();\nserver.use(process.env.RAZZLE_API_PREFIX || '', backendRoutes);\nserver.disable('x-powered-by').use(express.static(process.env.RAZZLE_PUBLIC_DIR)).get('/*', (req, res) => {\n  const {\n    html = '',\n    redirect = false\n  } = renderApp(req, res);\n\n  if (redirect) {\n    res.redirect(redirect);\n  } else {\n    res.send(html);\n  }\n});\nexport default server;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/server.tsx"],"names":["store","express","React","renderToString","Provider","StaticRouter","backendRoutes","App","assets","syncLoadAssets","require","process","env","RAZZLE_ASSETS_MANIFEST","cssLinksFromAssets","entrypoint","css","map","asset","join","jsScriptTagsFromAssets","extra","js","renderApp","req","res","context","markup","url","redirect","html","server","use","RAZZLE_API_PREFIX","disable","static","RAZZLE_PUBLIC_DIR","get","send"],"mappings":"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","sourcesContent":["import store from 'client/_redux/app/store';\r\nimport express from 'express';\r\nimport React from 'react';\r\nimport { renderToString } from 'react-dom/server';\r\nimport { Provider } from 'react-redux';\r\nimport { StaticRouter } from 'react-router-dom';\r\nimport backendRoutes from 'server/routes';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nimport App from './client/App';\r\n\r\nlet assets: any;\r\n\r\nconst syncLoadAssets = () => {\r\n  assets = require(process.env.RAZZLE_ASSETS_MANIFEST!);\r\n};\r\nsyncLoadAssets();\r\n//@ts-ignore\r\nconst cssLinksFromAssets = (assets, entrypoint) =>\r\n  assets[entrypoint]\r\n    ? assets[entrypoint].css\r\n      ? assets[entrypoint].css\r\n          //@ts-ignore\r\n          .map((asset) => `<link rel=\"stylesheet\" href=\"${asset}\">`)\r\n          .join('')\r\n      : ''\r\n    : '';\r\n//@ts-ignore\r\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') =>\r\n  assets[entrypoint]\r\n    ? assets[entrypoint].js\r\n      ? assets[entrypoint].js\r\n          //@ts-ignore\r\n          .map((asset) => `<script src=\"${asset}\"${extra}></script>`)\r\n          .join('')\r\n      : ''\r\n    : '';\r\n\r\nexport const renderApp = (req: express.Request, res: express.Response) => {\r\n  const context: any = {};\r\n\r\n  const markup = renderToString(\r\n    <StaticRouter context={context} location={req.url}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </StaticRouter>,\r\n  );\r\n\r\n  if (context.url) {\r\n    return { redirect: context.url };\r\n  }\r\n  const html =\r\n    // prettier-ignore\r\n    `<!doctype html>\r\n    <html lang=\"\">\r\n    <head>\r\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n        <meta charSet='utf-8' />\r\n        <title>Welcome to Razzle</title>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n        ${cssLinksFromAssets(assets, 'client')}\r\n    </head>\r\n    <body>\r\n        <div id=\"root\">${markup}</div>\r\n        ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\r\n    </body>\r\n  </html>`;\r\n\r\n  return { html };\r\n};\r\n\r\nconst server = express();\r\nserver.use(process.env.RAZZLE_API_PREFIX || '', backendRoutes);\r\nserver\r\n  .disable('x-powered-by')\r\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR!))\r\n  .get('/*', (req: express.Request, res: express.Response) => {\r\n    const { html = '', redirect = false } = renderApp(req, res);\r\n    if (redirect) {\r\n      res.redirect(redirect);\r\n    } else {\r\n      res.send(html);\r\n    }\r\n  });\r\n\r\nexport default server;\r\n"]},"metadata":{},"sourceType":"module"}