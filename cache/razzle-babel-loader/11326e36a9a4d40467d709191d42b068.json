{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moate\\\\OneDrive\\\\Desktop\\\\Tests\\\\github-app\\\\src\\\\client\\\\pages\\\\Home.tsx\";\nvar __jsx = React.createElement;\nimport { getSearchedRepositories } from 'client/actions/github';\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport { useAppDispatch } from 'client/_redux/app/store';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Input, Pagination } from 'semantic-ui-react';\n\nconst Home = () => {\n  const {\n    repositories,\n    loading\n  } = useSelector(state => state.githubReducer);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getSearchedRepositories({\n      q: 2\n    }));\n  }, []);\n  const {\n    paginatedData,\n    handleNextPage,\n    activePage,\n    totalPages\n  } = usePagination(repositories, 30);\n  return __jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Repositories\"), __jsx(Input, {\n    onChange: console.log,\n    className: \"py-1\",\n    loading: loading,\n    placeholder: \"Search...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), paginatedData === null || paginatedData === void 0 ? void 0 : paginatedData.map(rep => {\n    const {\n      name,\n      owner,\n      full_name,\n      description,\n      html_url\n    } = rep;\n    return __jsx(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, __jsx(RepositoryCard, {\n      name,\n      owner,\n      full_name,\n      description,\n      html_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }));\n  }), __jsx(\"div\", {\n    className: \"center py-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Pagination, {\n    onPageChange: handleNextPage,\n    defaultActivePage: activePage,\n    totalPages: totalPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/pages/Home.tsx"],"names":["getSearchedRepositories","RepositoryCard","useAppDispatch","React","useEffect","useSelector","Card","Input","Pagination","Home","repositories","loading","state","githubReducer","dispatch","q","paginatedData","handleNextPage","activePage","totalPages","usePagination","console","log","map","rep","name","owner","full_name","description","html_url"],"mappings":";;AAAA,SAASA,uBAAT,QAAwC,uBAAxC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAAoBC,cAApB,QAA0C,yBAA1C;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,QAAwC,mBAAxC;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAC3B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA4BN,WAAW,CAAEO,KAAD,IAAsBA,KAAK,CAACC,aAA7B,CAA7C;AACA,QAAMC,QAAQ,GAAGZ,cAAc,EAA/B;AACAE,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACd,uBAAuB,CAAC;AAAEe,MAAAA,CAAC,EAAE;AAAL,KAAD,CAAxB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,cAAjB;AAAiCC,IAAAA,UAAjC;AAA6CC,IAAAA;AAA7C,MAA4DC,aAAa,CAC7EV,YAD6E,EAE7E,EAF6E,CAA/E;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,KAAD;AACE,IAAA,QAAQ,EAAEW,OAAO,CAACC,GADpB;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAEX,OAHX;AAIE,IAAA,WAAW,EAAC,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQGK,aARH,aAQGA,aARH,uBAQGA,aAAa,CAAEO,GAAf,CAAoBC,GAAD,IAAS;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,SAAf;AAA0BC,MAAAA,WAA1B;AAAuCC,MAAAA;AAAvC,QAAoDL,GAA1D;AACA,WACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,cAAD;AAAsBC,MAAAA,IAAtB;AAA4BC,MAAAA,KAA5B;AAAmCC,MAAAA,SAAnC;AAA8CC,MAAAA,WAA9C;AAA2DC,MAAAA,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAPA,CARH,EAgBE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,YAAY,EAAEZ,cADhB;AAEE,IAAA,iBAAiB,EAAEC,UAFrB;AAGE,IAAA,UAAU,EAAEC,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBF,CADF;AA0BD,CArCD;;AAuCA,eAAeV,IAAf","sourcesContent":["import { getSearchedRepositories } from 'client/actions/github';\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport { RootState, useAppDispatch } from 'client/_redux/app/store';\nimport { Repository } from 'models/Repository';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Input, Pagination } from 'semantic-ui-react';\n\nconst Home: React.FC = () => {\n  const { repositories, loading } = useSelector((state: RootState) => state.githubReducer);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getSearchedRepositories({ q: 2 }));\n  }, []);\n\n  const { paginatedData, handleNextPage, activePage, totalPages } = usePagination<Repository>(\n    repositories,\n    30,\n  );\n  return (\n    <div className=\"App\">\n      <h1>Repositories</h1>\n      <Input\n        onChange={console.log}\n        className=\"py-1\"\n        loading={loading}\n        placeholder=\"Search...\"\n      />\n      {paginatedData?.map((rep) => {\n        const { name, owner, full_name, description, html_url } = rep;\n        return (\n          <Card.Group>\n            <RepositoryCard {...{ name, owner, full_name, description, html_url }} />\n          </Card.Group>\n        );\n      })}\n      <div className=\"center py-1\">\n        <Pagination\n          onPageChange={handleNextPage}\n          defaultActivePage={activePage}\n          totalPages={totalPages}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}