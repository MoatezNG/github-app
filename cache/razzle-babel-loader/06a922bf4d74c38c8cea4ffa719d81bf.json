{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/moate/OneDrive/Desktop/Tests/github-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/moate/OneDrive/Desktop/Tests/github-app/node_modules/@babel/runtime/regenerator\";\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as githubService from 'client/services/github';\nexport var getPublicRepositories = createAsyncThunk('github/repositories', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, _ref) {\n    var rejectWithValue, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            rejectWithValue = _ref.rejectWithValue;\n            _context.prev = 1;\n            _context.next = 4;\n            return githubService.getPublicRepositories();\n\n          case 4:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", rejectWithValue(_context.t0.message));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/actions/github.ts"],"names":["createAsyncThunk","githubService","getPublicRepositories","_","rejectWithValue","data","message"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,OAAO,KAAKC,aAAZ,MAA+B,wBAA/B;AAEA,OAAO,IAAMC,qBAAqB,GAAGF,gBAAgB,CACnD,qBADmD;AAAA,uEAEnD,iBAAOG,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAYC,YAAAA,eAAZ,QAAYA,eAAZ;AAAA;AAAA;AAAA,mBAEuBH,aAAa,CAACC,qBAAd,EAFvB;;AAAA;AAEUG,YAAAA,IAFV;AAAA,6CAGWA,IAHX;;AAAA;AAAA;AAAA;AAAA,6CAKWD,eAAe,CAAC,YAAME,OAAP,CAL1B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFmD;;AAAA;AAAA;AAAA;AAAA,IAA9C","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as githubService from 'client/services/github';\n\nexport const getPublicRepositories = createAsyncThunk(\n  'github/repositories',\n  async (_, { rejectWithValue }) => {\n    try {\n      const data = await githubService.getPublicRepositories();\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n"]},"metadata":{},"sourceType":"module"}