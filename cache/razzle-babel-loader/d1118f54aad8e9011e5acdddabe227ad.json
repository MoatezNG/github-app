{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moate\\\\OneDrive\\\\Desktop\\\\Tests\\\\github-app\\\\src\\\\client\\\\pages\\\\Home.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport { getPublicRepositories, getSearchedRepositories } from 'client/actions/github';\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport { usePagination } from 'client/hooks/usePagination';\nimport { useAppDispatch } from 'client/_redux/app/store';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Input, Pagination } from 'semantic-ui-react';\n\nvar Home = function Home() {\n  var _searchedRepositories;\n\n  var _useSelector = useSelector(function (state) {\n    return state.githubReducer;\n  }),\n      repositories = _useSelector.repositories,\n      loading = _useSelector.loading,\n      searchedRepositories = _useSelector.searchedRepositories;\n\n  var _useState = useState(''),\n      keyword = _useState[0],\n      setKeyword = _useState[1];\n\n  var dispatch = useAppDispatch();\n  useEffect(function () {\n    dispatch(getPublicRepositories());\n  }, []);\n  useEffect(function () {\n    dispatch(getSearchedRepositories({\n      q: keyword\n    }));\n  }, [keyword]);\n\n  var _usePagination = usePagination(repositories, 30),\n      paginatedData = _usePagination.paginatedData,\n      handleNextPage = _usePagination.handleNextPage,\n      activePage = _usePagination.activePage,\n      totalPages = _usePagination.totalPages;\n\n  var onSearch = function onSearch(event) {\n    setKeyword(event.target.value);\n  };\n\n  return __jsx(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Repositories\"), __jsx(Input, {\n    onChange: onSearch,\n    className: \"py-1\",\n    loading: loading,\n    placeholder: \"Search...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), searchedRepositories ? __jsx(React.Fragment, null, (_searchedRepositories = searchedRepositories.items) === null || _searchedRepositories === void 0 ? void 0 : _searchedRepositories.map(function (rep) {\n    var name = rep.name,\n        owner = rep.owner,\n        full_name = rep.full_name,\n        description = rep.description,\n        html_url = rep.html_url;\n    return __jsx(Card.Group, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, __jsx(RepositoryCard, {\n      name: name,\n      owner: owner,\n      full_name: full_name,\n      description: description,\n      html_url: html_url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }));\n  })) : __jsx(React.Fragment, null, paginatedData === null || paginatedData === void 0 ? void 0 : paginatedData.map(function (rep) {\n    var name = rep.name,\n        owner = rep.owner,\n        full_name = rep.full_name,\n        description = rep.description,\n        html_url = rep.html_url;\n    return __jsx(Card.Group, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, __jsx(RepositoryCard, {\n      name: name,\n      owner: owner,\n      full_name: full_name,\n      description: description,\n      html_url: html_url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }));\n  }), __jsx(\"div\", {\n    className: \"center py-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(Pagination, {\n    onPageChange: handleNextPage,\n    defaultActivePage: activePage,\n    totalPages: totalPages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/pages/Home.tsx"],"names":["getPublicRepositories","getSearchedRepositories","RepositoryCard","usePagination","useAppDispatch","React","useEffect","useState","useSelector","Card","Input","Pagination","Home","state","githubReducer","repositories","loading","searchedRepositories","keyword","setKeyword","dispatch","q","paginatedData","handleNextPage","activePage","totalPages","onSearch","event","target","value","items","map","rep","name","owner","full_name","description","html_url"],"mappings":"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","sourcesContent":["import { getPublicRepositories, getSearchedRepositories } from 'client/actions/github';\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport { usePagination } from 'client/hooks/usePagination';\nimport { RootState, useAppDispatch } from 'client/_redux/app/store';\nimport { Repository } from 'models/Repository';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Input, Pagination } from 'semantic-ui-react';\n\nconst Home: React.FC = () => {\n  const { repositories, loading, searchedRepositories } = useSelector(\n    (state: RootState) => state.githubReducer,\n  );\n  const [keyword, setKeyword] = useState('');\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getPublicRepositories());\n  }, []);\n  useEffect(() => {\n    dispatch(getSearchedRepositories({ q: keyword }));\n  }, [keyword]);\n\n  const { paginatedData, handleNextPage, activePage, totalPages } = usePagination<Repository>(\n    repositories,\n    30,\n  );\n  const onSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setKeyword(event.target.value);\n  };\n  return (\n    <div className=\"App\">\n      <h1>Repositories</h1>\n      <Input onChange={onSearch} className=\"py-1\" loading={loading} placeholder=\"Search...\" />\n      {searchedRepositories ? (\n        <>\n          {searchedRepositories.items?.map((rep) => {\n            const { name, owner, full_name, description, html_url } = rep;\n            return (\n              <Card.Group>\n                <RepositoryCard {...{ name, owner, full_name, description, html_url }} />\n              </Card.Group>\n            );\n          })}\n        </>\n      ) : (\n        <>\n          {paginatedData?.map((rep) => {\n            const { name, owner, full_name, description, html_url } = rep;\n            return (\n              <Card.Group>\n                <RepositoryCard {...{ name, owner, full_name, description, html_url }} />\n              </Card.Group>\n            );\n          })}\n          <div className=\"center py-1\">\n            <Pagination\n              onPageChange={handleNextPage}\n              defaultActivePage={activePage}\n              totalPages={totalPages}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}