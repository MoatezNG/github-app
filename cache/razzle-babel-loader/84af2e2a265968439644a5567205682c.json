{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getPublicRepositories, getSearchedRepositories } from 'client/actions/github';\nconst initialState = {\n  repositories: [],\n  loading: false,\n  searching: false\n};\nexport const countSlice = createSlice({\n  name: 'github',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getPublicRepositories.pending.type]: state => {\n      state.loading = true;\n    },\n    [getPublicRepositories.fulfilled.type]: (state, {\n      payload\n    }) => {\n      state.repositories = payload;\n      state.loading = false;\n    },\n    [getPublicRepositories.rejected.type]: state => {\n      state.loading = false;\n    },\n    // search\n    [getSearchedRepositories.pending.type]: state => {\n      state.loading = true;\n    },\n    [getSearchedRepositories.fulfilled.type]: (state, {\n      payload\n    }) => {\n      state.repositories = payload.items;\n      state.loading = false;\n    },\n    [getSearchedRepositories.rejected.type]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport default countSlice.reducer;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/_redux/reducers/githubReducer.ts"],"names":["createSlice","getPublicRepositories","getSearchedRepositories","initialState","repositories","loading","searching","countSlice","name","reducers","extraReducers","pending","type","state","fulfilled","payload","rejected","items","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,SAASC,qBAAT,EAAgCC,uBAAhC,QAA+D,uBAA/D;AAUA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,YAAY,EAAE,EADiB;AAE/BC,EAAAA,OAAO,EAAE,KAFsB;AAG/BC,EAAAA,SAAS,EAAE;AAHoB,CAAjC;AAKA,OAAO,MAAMC,UAAU,GAAGP,WAAW,CAAC;AACpCQ,EAAAA,IAAI,EAAE,QAD8B;AAEpCL,EAAAA,YAFoC;AAGpCM,EAAAA,QAAQ,EAAE,EAH0B;AAIpCC,EAAAA,aAAa,EAAE;AACb,KAACT,qBAAqB,CAACU,OAAtB,CAA8BC,IAA/B,GAAuCC,KAAD,IAAW;AAC/CA,MAAAA,KAAK,CAACR,OAAN,GAAgB,IAAhB;AACD,KAHY;AAIb,KAACJ,qBAAqB,CAACa,SAAtB,CAAgCF,IAAjC,GAAwC,CACtCC,KADsC,EAEtC;AAAEE,MAAAA;AAAF,KAFsC,KAGnC;AACHF,MAAAA,KAAK,CAACT,YAAN,GAAqBW,OAArB;AACAF,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACD,KAVY;AAWb,KAACJ,qBAAqB,CAACe,QAAtB,CAA+BJ,IAAhC,GAAwCC,KAAD,IAAW;AAChDA,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACD,KAbY;AAeb;AACA,KAACH,uBAAuB,CAACS,OAAxB,CAAgCC,IAAjC,GAAyCC,KAAD,IAAW;AACjDA,MAAAA,KAAK,CAACR,OAAN,GAAgB,IAAhB;AACD,KAlBY;AAoBb,KAACH,uBAAuB,CAACY,SAAxB,CAAkCF,IAAnC,GAA0C,CACxCC,KADwC,EAExC;AAAEE,MAAAA;AAAF,KAFwC,KAGrC;AACHF,MAAAA,KAAK,CAACT,YAAN,GAAqBW,OAAO,CAACE,KAA7B;AACAJ,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACD,KA1BY;AA2Bb,KAACH,uBAAuB,CAACc,QAAxB,CAAiCJ,IAAlC,GAA0CC,KAAD,IAAW;AAClDA,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACD;AA7BY;AAJqB,CAAD,CAA9B;AAqCP,eAAeE,UAAU,CAACW,OAA1B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { getPublicRepositories, getSearchedRepositories } from 'client/actions/github';\nimport { Repository } from 'models/Repository';\nimport { PaginatedResponse } from 'types/utils';\n\nexport type countState = {\n  repositories: Repository[];\n  loading: boolean;\n  searching: boolean;\n};\n\nconst initialState: countState = {\n  repositories: [],\n  loading: false,\n  searching: false,\n};\nexport const countSlice = createSlice({\n  name: 'github',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getPublicRepositories.pending.type]: (state) => {\n      state.loading = true;\n    },\n    [getPublicRepositories.fulfilled.type]: (\n      state,\n      { payload }: PayloadAction<Repository[]>,\n    ) => {\n      state.repositories = payload;\n      state.loading = false;\n    },\n    [getPublicRepositories.rejected.type]: (state) => {\n      state.loading = false;\n    },\n\n    // search\n    [getSearchedRepositories.pending.type]: (state) => {\n      state.loading = true;\n    },\n\n    [getSearchedRepositories.fulfilled.type]: (\n      state,\n      { payload }: PayloadAction<PaginatedResponse<Repository>>,\n    ) => {\n      state.repositories = payload.items;\n      state.loading = false;\n    },\n    [getSearchedRepositories.rejected.type]: (state) => {\n      state.loading = false;\n    },\n  },\n});\n\nexport default countSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}