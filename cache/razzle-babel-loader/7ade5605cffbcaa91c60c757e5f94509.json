{"ast":null,"code":"import _toConsumableArray from \"C:/Users/moate/OneDrive/Desktop/Tests/github-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { useEffect, useState } from 'react';\nexport var usePagination = function usePagination(data, page, limit) {\n  var _useState = useState(page),\n      pageIndex = _useState[0],\n      setPageIndex = _useState[1];\n\n  var _useState2 = useState([]),\n      paginatedData = _useState2[0],\n      setPaginatedData = _useState2[1];\n\n  useEffect(function () {\n    setPaginatedData(function (prevState) {\n      return [].concat(_toConsumableArray(prevState), _toConsumableArray(data.slice((pageIndex - 1) * limit, limit * pageIndex)));\n    });\n  }, [pageIndex, data]);\n\n  var handleNextPage = function handleNextPage() {\n    setPageIndex(function (prevPage) {\n      return prevPage + 1;\n    });\n  };\n\n  return {\n    paginatedData: paginatedData,\n    handleNextPage: handleNextPage\n  };\n};","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/hooks/usePagination.ts"],"names":["useEffect","useState","usePagination","data","page","limit","pageIndex","setPageIndex","paginatedData","setPaginatedData","prevState","slice","handleNextPage","prevPage"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAC3BC,IAD2B,EAE3BC,IAF2B,EAG3BC,KAH2B,EAOxB;AACH,kBAAkCJ,QAAQ,CAACG,IAAD,CAA1C;AAAA,MAAOE,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA0CN,QAAQ,CAAM,EAAN,CAAlD;AAAA,MAAOO,aAAP;AAAA,MAAsBC,gBAAtB;;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,gBAAgB,CAAC,UAACC,SAAD;AAAA,0CACZA,SADY,sBAEZP,IAAI,CAACQ,KAAL,CAAW,CAACL,SAAS,GAAG,CAAb,IAAkBD,KAA7B,EAAoCA,KAAK,GAAGC,SAA5C,CAFY;AAAA,KAAD,CAAhB;AAID,GALQ,EAKN,CAACA,SAAD,EAAYH,IAAZ,CALM,CAAT;;AAMA,MAAMS,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BL,IAAAA,YAAY,CAAC,UAACM,QAAD;AAAA,aAAcA,QAAQ,GAAG,CAAzB;AAAA,KAAD,CAAZ;AACD,GAFD;;AAIA,SAAO;AAAEL,IAAAA,aAAa,EAAbA,aAAF;AAAiBI,IAAAA,cAAc,EAAdA;AAAjB,GAAP;AACD,CAtBM","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const usePagination = <T extends Record<string, any>>(\n  data: T[],\n  page: number,\n  limit: number,\n): {\n  paginatedData: T[];\n  handleNextPage: () => void;\n} => {\n  const [pageIndex, setPageIndex] = useState(page);\n  const [paginatedData, setPaginatedData] = useState<T[]>([]);\n\n  useEffect(() => {\n    setPaginatedData((prevState) => [\n      ...prevState,\n      ...data.slice((pageIndex - 1) * limit, limit * pageIndex),\n    ]);\n  }, [pageIndex, data]);\n  const handleNextPage = () => {\n    setPageIndex((prevPage) => prevPage + 1);\n  };\n\n  return { paginatedData, handleNextPage };\n};\n"]},"metadata":{},"sourceType":"module"}