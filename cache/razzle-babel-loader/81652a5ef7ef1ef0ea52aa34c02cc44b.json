{"ast":null,"code":"import _slicedToArray from \"C:/Users/moate/OneDrive/Desktop/Tests/github-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\moate\\\\OneDrive\\\\Desktop\\\\Tests\\\\github-app\\\\src\\\\client\\\\containers\\\\RepositoriesList\\\\index.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport { sortOptions } from 'client/constants/sortOptions';\nimport React from 'react';\nimport { Card, Input, Modal, Pagination, Select } from 'semantic-ui-react';\nimport { useRepositoriesList } from './useRepositoriesList';\n\nvar RepositoriesList = function RepositoriesList() {\n  var _useRepositoriesList = useRepositoriesList(),\n      activePage = _useRepositoriesList.activePage,\n      onSearch = _useRepositoriesList.onSearch,\n      handleNextPage = _useRepositoriesList.handleNextPage,\n      totalPages = _useRepositoriesList.totalPages,\n      loading = _useRepositoriesList.loading,\n      onMarkRepository = _useRepositoriesList.onMarkRepository,\n      onSort = _useRepositoriesList.onSort,\n      paginatedData = _useRepositoriesList.paginatedData;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"space-between py-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    onChange: onSearch,\n    loading: loading,\n    placeholder: \"Search...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), __jsx(Select, {\n    onChange: onSort,\n    placeholder: \"Select your sort\",\n    options: sortOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })), __jsx(Card.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, paginatedData === null || paginatedData === void 0 ? void 0 : paginatedData.map(function (rep) {\n    return __jsx(RepositoryCard, {\n      key: rep.id,\n      onFavorite: onMarkRepository,\n      repository: rep,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    });\n  })), __jsx(\"div\", {\n    className: \"center py-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Pagination, {\n    onPageChange: handleNextPage,\n    defaultActivePage: activePage,\n    totalPages: totalPages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), __jsx(Modal, {\n    onClose: function onClose() {\n      return setOpen(false);\n    },\n    onOpen: function onOpen() {\n      return setOpen(true);\n    },\n    open: open,\n    trigger: __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }\n    }, \"Show Modal\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Select a Photo\"), __jsx(Modal.Content, {\n    image: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(Image, {\n    size: \"medium\",\n    src: \"https://react.semantic-ui.com/images/avatar/large/rachel.png\",\n    wrapped: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), __jsx(Modal.Description, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Default Profile Image\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"We've found the following gravatar image associated with your e-mail address.\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Is it okay to use this photo?\"))), __jsx(Modal.Actions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    color: \"black\",\n    onClick: function onClick() {\n      return setOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Nope\"), __jsx(Button, {\n    content: \"Yep, that's me\",\n    labelPosition: \"right\",\n    icon: \"checkmark\",\n    onClick: function onClick() {\n      return setOpen(false);\n    },\n    positive: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default RepositoriesList;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/containers/RepositoriesList/index.tsx"],"names":["RepositoryCard","sortOptions","React","Card","Input","Modal","Pagination","Select","useRepositoriesList","RepositoriesList","activePage","onSearch","handleNextPage","totalPages","loading","onMarkRepository","onSort","paginatedData","useState","open","setOpen","map","rep","id"],"mappings":"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","sourcesContent":["import RepositoryCard from 'client/components/RepositoryCard';\nimport { sortOptions } from 'client/constants/sortOptions';\nimport React from 'react';\nimport { Card, Input, Modal, Pagination, Select } from 'semantic-ui-react';\nimport { useRepositoriesList } from './useRepositoriesList';\n\nconst RepositoriesList: React.FC = () => {\n  const {\n    activePage,\n    onSearch,\n    handleNextPage,\n    totalPages,\n    loading,\n    onMarkRepository,\n    onSort,\n    paginatedData,\n  } = useRepositoriesList();\n  const [open, setOpen] = React.useState(false);\n  return (\n    <div>\n      <div className=\"space-between py-1\">\n        <Input onChange={onSearch} loading={loading} placeholder=\"Search...\" />\n        <Select onChange={onSort} placeholder=\"Select your sort\" options={sortOptions} />\n      </div>\n      <Card.Group>\n        {paginatedData?.map((rep) => (\n          <RepositoryCard key={rep.id} onFavorite={onMarkRepository} repository={rep} />\n        ))}\n      </Card.Group>\n      <div className=\"center py-1\">\n        <Pagination\n          onPageChange={handleNextPage}\n          defaultActivePage={activePage}\n          totalPages={totalPages}\n        />\n      </div>\n      <Modal\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        trigger={<Button>Show Modal</Button>}\n      >\n        <Modal.Header>Select a Photo</Modal.Header>\n        <Modal.Content image>\n          <Image\n            size=\"medium\"\n            src=\"https://react.semantic-ui.com/images/avatar/large/rachel.png\"\n            wrapped\n          />\n          <Modal.Description>\n            <Header>Default Profile Image</Header>\n            <p>\n              We've found the following gravatar image associated with your e-mail address.\n            </p>\n            <p>Is it okay to use this photo?</p>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={() => setOpen(false)}>\n            Nope\n          </Button>\n          <Button\n            content=\"Yep, that's me\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={() => setOpen(false)}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n};\n\nexport default RepositoriesList;\n"]},"metadata":{},"sourceType":"module"}