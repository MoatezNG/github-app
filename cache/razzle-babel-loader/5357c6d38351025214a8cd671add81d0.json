{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moate\\\\OneDrive\\\\Desktop\\\\Tests\\\\github-app\\\\src\\\\client\\\\pages\\\\Home.tsx\";\nvar __jsx = React.createElement;\nimport { getPublicRepositories, getSearchedRepositories } from 'client/actions/github';\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport { usePagination } from 'client/hooks/usePagination';\nimport { useDebounce } from 'client/hooks/useDebounce';\nimport { useAppDispatch } from 'client/_redux/app/store';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Input, Pagination, Select } from 'semantic-ui-react';\nimport { sortOptions } from 'client/constants/sortOptions';\n\nconst Home = () => {\n  const {\n    repositories,\n    loading\n  } = useSelector(state => state.githubReducer);\n  const {\n    0: keyword,\n    1: setKeyword\n  } = useState('');\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getPublicRepositories());\n  }, []);\n  const debounceSearchTerm = useDebounce(keyword, 500);\n  useEffect(() => {\n    if (!debounceSearchTerm) return;\n    dispatch(getSearchedRepositories({\n      q: debounceSearchTerm\n    }));\n  }, [debounceSearchTerm]);\n  const {\n    paginatedData,\n    handleNextPage,\n    activePage,\n    totalPages\n  } = usePagination(repositories, 30);\n\n  const onSearch = event => {\n    setKeyword(event.target.value);\n  };\n\n  return __jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Repositories\"), __jsx(Input, {\n    onChange: onSearch,\n    className: \"py-1\",\n    loading: loading,\n    placeholder: \"Search...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), __jsx(Select, {\n    placeholder: \"Select your sort\",\n    options: sortOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), paginatedData === null || paginatedData === void 0 ? void 0 : paginatedData.map(rep => {\n    const {\n      name,\n      owner,\n      full_name,\n      description,\n      html_url\n    } = rep;\n    return __jsx(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, __jsx(RepositoryCard, {\n      name,\n      owner,\n      full_name,\n      description,\n      html_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }));\n  }), __jsx(\"div\", {\n    className: \"center py-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(Pagination, {\n    onPageChange: handleNextPage,\n    defaultActivePage: activePage,\n    totalPages: totalPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/pages/Home.tsx"],"names":["getPublicRepositories","getSearchedRepositories","RepositoryCard","usePagination","useDebounce","useAppDispatch","React","useEffect","useState","useSelector","Card","Input","Pagination","Select","sortOptions","Home","repositories","loading","state","githubReducer","keyword","setKeyword","dispatch","debounceSearchTerm","q","paginatedData","handleNextPage","activePage","totalPages","onSearch","event","target","value","map","rep","name","owner","full_name","description","html_url"],"mappings":"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","sourcesContent":["import { getPublicRepositories, getSearchedRepositories } from 'client/actions/github';\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport { usePagination } from 'client/hooks/usePagination';\nimport { useDebounce } from 'client/hooks/useDebounce';\nimport { RootState, useAppDispatch } from 'client/_redux/app/store';\nimport { Repository } from 'models/Repository';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Input, Pagination, Select } from 'semantic-ui-react';\nimport { sortOptions } from 'client/constants/sortOptions';\n\nconst Home: React.FC = () => {\n  const { repositories, loading } = useSelector((state: RootState) => state.githubReducer);\n  const [keyword, setKeyword] = useState('');\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getPublicRepositories());\n  }, []);\n  const debounceSearchTerm = useDebounce(keyword, 500);\n\n  useEffect(() => {\n    if (!debounceSearchTerm) return;\n    dispatch(getSearchedRepositories({ q: debounceSearchTerm }));\n  }, [debounceSearchTerm]);\n\n  const { paginatedData, handleNextPage, activePage, totalPages } = usePagination<Repository>(\n    repositories,\n    30,\n  );\n  const onSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setKeyword(event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Repositories</h1>\n      <Input onChange={onSearch} className=\"py-1\" loading={loading} placeholder=\"Search...\" />\n      <Select placeholder=\"Select your sort\" options={sortOptions} />\n      {paginatedData?.map((rep) => {\n        const { name, owner, full_name, description, html_url } = rep;\n        return (\n          <Card.Group>\n            <RepositoryCard {...{ name, owner, full_name, description, html_url }} />\n          </Card.Group>\n        );\n      })}\n      <div className=\"center py-1\">\n        <Pagination\n          onPageChange={handleNextPage}\n          defaultActivePage={activePage}\n          totalPages={totalPages}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}