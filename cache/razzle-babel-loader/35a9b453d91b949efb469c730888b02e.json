{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moate\\\\OneDrive\\\\Desktop\\\\Tests\\\\github-app\\\\src\\\\client\\\\pages\\\\Home.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport { getPublicRepositories, getSearchedRepositories } from 'client/actions/github';\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport { usePagination } from 'client/hooks/usePagination';\nimport { useDebounce } from 'client/hooks/useDebounce';\nimport { useAppDispatch } from 'client/_redux/app/store';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Input, Pagination, Select } from 'semantic-ui-react';\nimport { sortOptions } from 'client/constants/sortOptions';\nimport { addToFavorites, sortByAlphabetic } from 'client/_redux/reducers/githubReducer';\n\nvar Home = function Home() {\n  var _useSelector = useSelector(function (state) {\n    return state.githubReducer;\n  }),\n      repositories = _useSelector.repositories,\n      loading = _useSelector.loading;\n\n  var _useState = useState(''),\n      keyword = _useState[0],\n      setKeyword = _useState[1];\n\n  var dispatch = useAppDispatch();\n  useEffect(function () {\n    dispatch(getPublicRepositories());\n  }, []);\n  var debounceSearchTerm = useDebounce(keyword, 500);\n  useEffect(function () {\n    if (!debounceSearchTerm) return;\n    dispatch(getSearchedRepositories({\n      q: debounceSearchTerm\n    }));\n  }, [debounceSearchTerm]);\n\n  var _usePagination = usePagination(repositories, 30),\n      paginatedData = _usePagination.paginatedData,\n      handleNextPage = _usePagination.handleNextPage,\n      activePage = _usePagination.activePage,\n      totalPages = _usePagination.totalPages;\n\n  var onSearch = function onSearch(event) {\n    setKeyword(event.target.value);\n  };\n\n  var onSort = function onSort(_, data) {\n    dispatch(sortByAlphabetic(data.value));\n  };\n\n  var onMarkRepository = function onMarkRepository(id) {\n    dispatch(addToFavorites(id));\n  };\n\n  return __jsx(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Repositories\"), __jsx(\"div\", {\n    className: \"space-between py-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    onChange: onSearch,\n    loading: loading,\n    placeholder: \"Search...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), __jsx(Select, {\n    onChange: onSort,\n    placeholder: \"Select your sort\",\n    options: sortOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), __jsx(Card.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, paginatedData === null || paginatedData === void 0 ? void 0 : paginatedData.map(function (rep) {\n    var name = rep.name,\n        owner = rep.owner,\n        full_name = rep.full_name,\n        description = rep.description,\n        html_url = rep.html_url,\n        id = rep.id,\n        marked = rep.marked;\n    return __jsx(RepositoryCard, {\n      key: id,\n      onFavorite: onMarkRepository,\n      name: name,\n      owner: owner,\n      full_name: full_name,\n      description: description,\n      html_url: html_url,\n      id: id,\n      marked: marked,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    });\n  })), __jsx(\"div\", {\n    className: \"center py-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(Pagination, {\n    onPageChange: handleNextPage,\n    defaultActivePage: activePage,\n    totalPages: totalPages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/pages/Home.tsx"],"names":["getPublicRepositories","getSearchedRepositories","RepositoryCard","usePagination","useDebounce","useAppDispatch","React","useEffect","useState","useSelector","Card","Input","Pagination","Select","sortOptions","addToFavorites","sortByAlphabetic","Home","state","githubReducer","repositories","loading","keyword","setKeyword","dispatch","debounceSearchTerm","q","paginatedData","handleNextPage","activePage","totalPages","onSearch","event","target","value","onSort","_","data","onMarkRepository","id","map","rep","name","owner","full_name","description","html_url","marked"],"mappings":"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","sourcesContent":["import { getPublicRepositories, getSearchedRepositories } from 'client/actions/github';\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport { usePagination } from 'client/hooks/usePagination';\nimport { useDebounce } from 'client/hooks/useDebounce';\nimport { RootState, useAppDispatch } from 'client/_redux/app/store';\nimport { Repository } from 'models/Repository';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, DropdownProps, Input, Pagination, Select } from 'semantic-ui-react';\nimport { SortingValues, sortOptions } from 'client/constants/sortOptions';\nimport { addToFavorites, sortByAlphabetic } from 'client/_redux/reducers/githubReducer';\n\nconst Home: React.FC = () => {\n  const { repositories, loading } = useSelector((state: RootState) => state.githubReducer);\n  const [keyword, setKeyword] = useState('');\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getPublicRepositories());\n  }, []);\n  const debounceSearchTerm = useDebounce(keyword, 500);\n\n  useEffect(() => {\n    if (!debounceSearchTerm) return;\n    dispatch(getSearchedRepositories({ q: debounceSearchTerm }));\n  }, [debounceSearchTerm]);\n\n  const { paginatedData, handleNextPage, activePage, totalPages } = usePagination<Repository>(\n    repositories,\n    30,\n  );\n  const onSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setKeyword(event.target.value);\n  };\n  const onSort = (_: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => {\n    dispatch(sortByAlphabetic(data.value as SortingValues));\n  };\n  const onMarkRepository = (id: number) => {\n    dispatch(addToFavorites(id));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Repositories</h1>\n      <div className=\"space-between py-1\">\n        <Input onChange={onSearch} loading={loading} placeholder=\"Search...\" />\n        <Select onChange={onSort} placeholder=\"Select your sort\" options={sortOptions} />\n      </div>\n      <Card.Group>\n        {paginatedData?.map((rep) => {\n          const { name, owner, full_name, description, html_url, id, marked } = rep;\n          return (\n            <RepositoryCard\n              key={id}\n              onFavorite={onMarkRepository}\n              {...{ name, owner, full_name, description, html_url, id, marked }}\n            />\n          );\n        })}\n      </Card.Group>\n      <div className=\"center py-1\">\n        <Pagination\n          onPageChange={handleNextPage}\n          defaultActivePage={activePage}\n          totalPages={totalPages}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}