{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moate\\\\OneDrive\\\\Desktop\\\\Tests\\\\github-app\\\\src\\\\client\\\\containers\\\\RepositoriesList\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport { sortOptions } from 'client/constants/sortOptions';\nimport React from 'react';\nimport { Button, Card, Header, Input, Modal, Pagination, Select } from 'semantic-ui-react';\nimport { useRepositoriesList } from './useRepositoriesList';\n\nconst RepositoriesList = () => {\n  const {\n    activePage,\n    onSearch,\n    handleNextPage,\n    totalPages,\n    loading,\n    onMarkRepository,\n    onSort,\n    paginatedData\n  } = useRepositoriesList();\n  const [open, setOpen] = React.useState(false);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"space-between py-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    onChange: onSearch,\n    loading: loading,\n    placeholder: \"Search...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), __jsx(Select, {\n    onChange: onSort,\n    placeholder: \"Select your sort\",\n    options: sortOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })), __jsx(Card.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, paginatedData === null || paginatedData === void 0 ? void 0 : paginatedData.map(rep => __jsx(RepositoryCard, {\n    showMoreDetails: () => setOpen(true),\n    key: rep.id,\n    onFavorite: onMarkRepository,\n    repository: rep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    className: \"center py-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(Pagination, {\n    onPageChange: handleNextPage,\n    defaultActivePage: activePage,\n    totalPages: totalPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), __jsx(Modal, {\n    onClose: () => setOpen(false),\n    open: open,\n    trigger: __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 66\n      }\n    }, \"Show Modal\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Select a Photo\"), __jsx(Modal.Content, {\n    image: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Default Profile Image\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"We've found the following gravatar image associated with your e-mail address.\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Is it okay to use this photo?\")))));\n};\n\nexport default RepositoriesList;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/containers/RepositoriesList/index.tsx"],"names":["RepositoryCard","sortOptions","React","Button","Card","Header","Input","Modal","Pagination","Select","useRepositoriesList","RepositoriesList","activePage","onSearch","handleNextPage","totalPages","loading","onMarkRepository","onSort","paginatedData","open","setOpen","useState","map","rep","id"],"mappings":"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","sourcesContent":["import RepositoryCard from 'client/components/RepositoryCard';\nimport { sortOptions } from 'client/constants/sortOptions';\nimport React from 'react';\nimport { Button, Card, Header, Input, Modal, Pagination, Select } from 'semantic-ui-react';\nimport { useRepositoriesList } from './useRepositoriesList';\n\nconst RepositoriesList: React.FC = () => {\n  const {\n    activePage,\n    onSearch,\n    handleNextPage,\n    totalPages,\n    loading,\n    onMarkRepository,\n    onSort,\n    paginatedData,\n  } = useRepositoriesList();\n  const [open, setOpen] = React.useState(false);\n  return (\n    <div>\n      <div className=\"space-between py-1\">\n        <Input onChange={onSearch} loading={loading} placeholder=\"Search...\" />\n        <Select onChange={onSort} placeholder=\"Select your sort\" options={sortOptions} />\n      </div>\n      <Card.Group>\n        {paginatedData?.map((rep) => (\n          <RepositoryCard\n            showMoreDetails={() => setOpen(true)}\n            key={rep.id}\n            onFavorite={onMarkRepository}\n            repository={rep}\n          />\n        ))}\n      </Card.Group>\n      <div className=\"center py-1\">\n        <Pagination\n          onPageChange={handleNextPage}\n          defaultActivePage={activePage}\n          totalPages={totalPages}\n        />\n      </div>\n      <Modal onClose={() => setOpen(false)} open={open} trigger={<Button>Show Modal</Button>}>\n        <Modal.Header>Select a Photo</Modal.Header>\n        <Modal.Content image>\n          <Modal.Description>\n            <Header>Default Profile Image</Header>\n            <p>\n              We've found the following gravatar image associated with your e-mail address.\n            </p>\n            <p>Is it okay to use this photo?</p>\n          </Modal.Description>\n        </Modal.Content>\n      </Modal>\n    </div>\n  );\n};\n\nexport default RepositoriesList;\n"]},"metadata":{},"sourceType":"module"}