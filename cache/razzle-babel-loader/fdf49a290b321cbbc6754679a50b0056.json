{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getPublicRepositories } from 'client/actions/github';\nconst initialState = {\n  repositories: [],\n  loading: false\n};\nexport const countSlice = createSlice({\n  name: 'count',\n  initialState,\n  reducers: {\n    incrementAction: state => {\n      state.count += 1;\n    }\n  },\n  extraReducers: {\n    [getPublicRepositories.pending.type]: state => {\n      state.loading = true;\n    },\n    [getPublicRepositories.fulfilled.type]: (state, {\n      payload\n    }) => {\n      state.count = payload;\n    },\n    [getPublicRepositories.rejected.type]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport const {\n  incrementAction\n} = countSlice.actions;\nexport default countSlice.reducer;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/_redux/reducers/githubReducer.ts"],"names":["createSlice","getPublicRepositories","initialState","repositories","loading","countSlice","name","reducers","incrementAction","state","count","extraReducers","pending","type","fulfilled","payload","rejected","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,qBAAT,QAAsC,uBAAtC;AAOA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,YAAY,EAAE,EADiB;AAE/BC,EAAAA,OAAO,EAAE;AAFsB,CAAjC;AAIA,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;AACpCM,EAAAA,IAAI,EAAE,OAD8B;AAEpCJ,EAAAA,YAFoC;AAGpCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAGC,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACC,KAAN,IAAe,CAAf;AACD;AAHO,GAH0B;AAQpCC,EAAAA,aAAa,EAAE;AACb,KAACV,qBAAqB,CAACW,OAAtB,CAA8BC,IAA/B,GAAuCJ,KAAD,IAAW;AAC/CA,MAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACD,KAHY;AAIb,KAACH,qBAAqB,CAACa,SAAtB,CAAgCD,IAAjC,GAAwC,CAACJ,KAAD,EAAQ;AAAEM,MAAAA;AAAF,KAAR,KAA6B;AACnEN,MAAAA,KAAK,CAACC,KAAN,GAAcK,OAAd;AACD,KANY;AAOb,KAACd,qBAAqB,CAACe,QAAtB,CAA+BH,IAAhC,GAAwCJ,KAAD,IAAW;AAChDA,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACD;AATY;AARqB,CAAD,CAA9B;AAqBP,OAAO,MAAM;AAAEI,EAAAA;AAAF,IAAsBH,UAAU,CAACY,OAAvC;AACP,eAAeZ,UAAU,CAACa,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { getPublicRepositories } from 'client/actions/github';\n\nexport type countState = {\n  repositories: any[];\n  loading: boolean;\n};\n\nconst initialState: countState = {\n  repositories: [],\n  loading: false,\n};\nexport const countSlice = createSlice({\n  name: 'count',\n  initialState,\n  reducers: {\n    incrementAction: (state) => {\n      state.count += 1;\n    },\n  },\n  extraReducers: {\n    [getPublicRepositories.pending.type]: (state) => {\n      state.loading = true;\n    },\n    [getPublicRepositories.fulfilled.type]: (state, { payload }: any) => {\n      state.count = payload;\n    },\n    [getPublicRepositories.rejected.type]: (state) => {\n      state.loading = false;\n    },\n  },\n});\n\nexport const { incrementAction } = countSlice.actions;\nexport default countSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}