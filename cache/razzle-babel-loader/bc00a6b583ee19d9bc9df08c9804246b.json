{"ast":null,"code":"import _defineProperty from \"C:/Users/moate/OneDrive/Desktop/Tests/github-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _extraReducers;\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { getPublicRepositories } from 'client/actions/github';\nvar initialState = {\n  repositories: [],\n  loading: false\n};\nexport var countSlice = createSlice({\n  name: 'count',\n  initialState: initialState,\n  reducers: {\n    incrementAction: function incrementAction(state) {\n      state.count += 1;\n    }\n  },\n  extraReducers: (_extraReducers = {}, _defineProperty(_extraReducers, getPublicRepositories.pending.type, function (state) {\n    state.loading = true;\n  }), _defineProperty(_extraReducers, getPublicRepositories.fulfilled.type, function (state, _ref) {\n    var payload = _ref.payload;\n    state.count = payload;\n  }), _defineProperty(_extraReducers, getPublicRepositories.rejected.type, function (state) {\n    state.loading = false;\n  }), _extraReducers)\n});\nvar incrementAction = countSlice.actions.incrementAction;\nexport { incrementAction };\nexport default countSlice.reducer;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/_redux/reducers/githubReducer.ts"],"names":["createSlice","getPublicRepositories","initialState","repositories","loading","countSlice","name","reducers","incrementAction","state","count","extraReducers","pending","type","fulfilled","payload","rejected","actions","reducer"],"mappings":";;;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,qBAAT,QAAsC,uBAAtC;AAOA,IAAMC,YAAwB,GAAG;AAC/BC,EAAAA,YAAY,EAAE,EADiB;AAE/BC,EAAAA,OAAO,EAAE;AAFsB,CAAjC;AAIA,OAAO,IAAMC,UAAU,GAAGL,WAAW,CAAC;AACpCM,EAAAA,IAAI,EAAE,OAD8B;AAEpCJ,EAAAA,YAAY,EAAZA,YAFoC;AAGpCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE,yBAACC,KAAD,EAAW;AAC1BA,MAAAA,KAAK,CAACC,KAAN,IAAe,CAAf;AACD;AAHO,GAH0B;AAQpCC,EAAAA,aAAa,wDACVV,qBAAqB,CAACW,OAAtB,CAA8BC,IADpB,EAC2B,UAACJ,KAAD,EAAW;AAC/CA,IAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACD,GAHU,mCAIVH,qBAAqB,CAACa,SAAtB,CAAgCD,IAJtB,EAI6B,UAACJ,KAAD,QAA6B;AAAA,QAAnBM,OAAmB,QAAnBA,OAAmB;AACnEN,IAAAA,KAAK,CAACC,KAAN,GAAcK,OAAd;AACD,GANU,mCAOVd,qBAAqB,CAACe,QAAtB,CAA+BH,IAPrB,EAO4B,UAACJ,KAAD,EAAW;AAChDA,IAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACD,GATU;AARuB,CAAD,CAA9B;AAqBA,IAAQI,eAAR,GAA4BH,UAAU,CAACY,OAAvC,CAAQT,eAAR;;AACP,eAAeH,UAAU,CAACa,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { getPublicRepositories } from 'client/actions/github';\n\nexport type countState = {\n  repositories: any[];\n  loading: boolean;\n};\n\nconst initialState: countState = {\n  repositories: [],\n  loading: false,\n};\nexport const countSlice = createSlice({\n  name: 'count',\n  initialState,\n  reducers: {\n    incrementAction: (state) => {\n      state.count += 1;\n    },\n  },\n  extraReducers: {\n    [getPublicRepositories.pending.type]: (state) => {\n      state.loading = true;\n    },\n    [getPublicRepositories.fulfilled.type]: (state, { payload }: any) => {\n      state.count = payload;\n    },\n    [getPublicRepositories.rejected.type]: (state) => {\n      state.loading = false;\n    },\n  },\n});\n\nexport const { incrementAction } = countSlice.actions;\nexport default countSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}