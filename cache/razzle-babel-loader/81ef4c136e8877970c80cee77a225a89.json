{"ast":null,"code":"import _toConsumableArray from \"C:/Users/moate/OneDrive/Desktop/Tests/github-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { useEffect, useState } from 'react';\nexport var usePagination = function usePagination(data, limit) {\n  var _useState = useState(1),\n      activePage = _useState[0],\n      setActivePage = _useState[1];\n\n  var _useState2 = useState([]),\n      paginatedData = _useState2[0],\n      setPaginatedData = _useState2[1];\n\n  useEffect(function () {\n    setPaginatedData(function (prevState) {\n      return [].concat(_toConsumableArray(prevState), _toConsumableArray(data.slice((activePage - 1) * limit, limit * activePage)));\n    });\n  }, [activePage, data]);\n\n  var handleNextPage = function handleNextPage(event, _) {\n    setActivePage(function (prevPage) {\n      return prevPage + 1;\n    });\n  };\n\n  return {\n    paginatedData: paginatedData,\n    handleNextPage: handleNextPage,\n    activePage: activePage\n  };\n};","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/hooks/usePagination.ts"],"names":["useEffect","useState","usePagination","data","limit","activePage","setActivePage","paginatedData","setPaginatedData","prevState","slice","handleNextPage","event","_","prevPage"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAC3BC,IAD2B,EAE3BC,KAF2B,EAOxB;AACH,kBAAoCH,QAAQ,CAAC,CAAD,CAA5C;AAAA,MAAOI,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA0CL,QAAQ,CAAM,EAAN,CAAlD;AAAA,MAAOM,aAAP;AAAA,MAAsBC,gBAAtB;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,gBAAgB,CAAC,UAACC,SAAD;AAAA,0CACZA,SADY,sBAEZN,IAAI,CAACO,KAAL,CAAW,CAACL,UAAU,GAAG,CAAd,IAAmBD,KAA9B,EAAqCA,KAAK,GAAGC,UAA7C,CAFY;AAAA,KAAD,CAAhB;AAID,GALQ,EAKN,CAACA,UAAD,EAAaF,IAAb,CALM,CAAT;;AAMA,MAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAA6CC,CAA7C,EAAoE;AACzFP,IAAAA,aAAa,CAAC,UAACQ,QAAD;AAAA,aAAcA,QAAQ,GAAG,CAAzB;AAAA,KAAD,CAAb;AACD,GAFD;;AAIA,SAAO;AAAEP,IAAAA,aAAa,EAAbA,aAAF;AAAiBI,IAAAA,cAAc,EAAdA,cAAjB;AAAiCN,IAAAA,UAAU,EAAVA;AAAjC,GAAP;AACD,CAtBM","sourcesContent":["import { useEffect, useState } from 'react';\nimport { PaginationProps } from 'semantic-ui-react';\n\nexport const usePagination = <T extends Record<string, any>>(\n  data: T[],\n  limit: number,\n): {\n  paginatedData: T[];\n  handleNextPage: () => void;\n  activePage: number;\n} => {\n  const [activePage, setActivePage] = useState(1);\n  const [paginatedData, setPaginatedData] = useState<T[]>([]);\n\n  useEffect(() => {\n    setPaginatedData((prevState) => [\n      ...prevState,\n      ...data.slice((activePage - 1) * limit, limit * activePage),\n    ]);\n  }, [activePage, data]);\n  const handleNextPage = (event: React.MouseEvent<HTMLAnchorElement>, _: PaginationProps) => {\n    setActivePage((prevPage) => prevPage + 1);\n  };\n\n  return { paginatedData, handleNextPage, activePage };\n};\n"]},"metadata":{},"sourceType":"module"}