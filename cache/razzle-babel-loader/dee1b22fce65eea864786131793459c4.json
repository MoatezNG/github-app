{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getPublicRepositories } from 'client/actions/github';\nconst initialState = {\n  repositories: [],\n  loading: false\n};\nexport const countSlice = createSlice({\n  name: 'github',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getPublicRepositories.pending.type]: state => {\n      state.loading = true;\n    },\n    [getPublicRepositories.fulfilled.type]: (state, {\n      payload\n    }) => {\n      console.log(payload);\n      state.repositories = payload;\n    },\n    [getPublicRepositories.rejected.type]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport default countSlice.reducer;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/_redux/reducers/githubReducer.ts"],"names":["createSlice","getPublicRepositories","initialState","repositories","loading","countSlice","name","reducers","extraReducers","pending","type","state","fulfilled","payload","console","log","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,qBAAT,QAAsC,uBAAtC;AAOA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,YAAY,EAAE,EADiB;AAE/BC,EAAAA,OAAO,EAAE;AAFsB,CAAjC;AAIA,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;AACpCM,EAAAA,IAAI,EAAE,QAD8B;AAEpCJ,EAAAA,YAFoC;AAGpCK,EAAAA,QAAQ,EAAE,EAH0B;AAIpCC,EAAAA,aAAa,EAAE;AACb,KAACP,qBAAqB,CAACQ,OAAtB,CAA8BC,IAA/B,GAAuCC,KAAD,IAAW;AAC/CA,MAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AACD,KAHY;AAIb,KAACH,qBAAqB,CAACW,SAAtB,CAAgCF,IAAjC,GAAwC,CAACC,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAA6B;AACnEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAF,MAAAA,KAAK,CAACR,YAAN,GAAqBU,OAArB;AACD,KAPY;AAQb,KAACZ,qBAAqB,CAACe,QAAtB,CAA+BN,IAAhC,GAAwCC,KAAD,IAAW;AAChDA,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACD;AAVY;AAJqB,CAAD,CAA9B;AAkBP,eAAeC,UAAU,CAACY,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { getPublicRepositories } from 'client/actions/github';\n\nexport type countState = {\n  repositories: any[];\n  loading: boolean;\n};\n\nconst initialState: countState = {\n  repositories: [],\n  loading: false,\n};\nexport const countSlice = createSlice({\n  name: 'github',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getPublicRepositories.pending.type]: (state) => {\n      state.loading = true;\n    },\n    [getPublicRepositories.fulfilled.type]: (state, { payload }: any) => {\n      console.log(payload);\n      state.repositories = payload;\n    },\n    [getPublicRepositories.rejected.type]: (state) => {\n      state.loading = false;\n    },\n  },\n});\n\nexport default countSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}