{"ast":null,"code":"import _objectSpread from \"C:/Users/moate/OneDrive/Desktop/Tests/github-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"C:/Users/moate/OneDrive/Desktop/Tests/github-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/Users/moate/OneDrive/Desktop/Tests/github-app/node_modules/@babel/runtime/regenerator\";\nimport { githubApi } from 'api';\nvar BASE_URL = '/repositories';\nexport var getPublicRepositories = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return githubApi.get(BASE_URL);\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getPublicRepositories() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getSearchedRepositories = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return githubApi.get(\"/search\".concat(BASE_URL), {\n              params: _objectSpread({}, params)\n            });\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getSearchedRepositories(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/services/github.ts"],"names":["githubApi","BASE_URL","getPublicRepositories","get","response","data","getSearchedRepositories","params"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,KAA1B;AAIA,IAAMC,QAAQ,GAAG,eAAjB;AACA,OAAO,IAAMC,qBAAqB;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACZF,SAAS,CAACG,GAAV,CAA4BF,QAA5B,CADY;;AAAA;AAC7BG,YAAAA,QAD6B;AAAA,6CAE5BA,QAAQ,CAACC,IAFmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArBH,qBAAqB;AAAA;AAAA;AAAA,GAA3B;AAKP,OAAO,IAAMI,uBAAuB;AAAA,uEAAG,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACdP,SAAS,CAACG,GAAV,kBAAuDF,QAAvD,GAAmE;AACxFM,cAAAA,MAAM,oBACDA,MADC;AADkF,aAAnE,CADc;;AAAA;AAC/BH,YAAAA,QAD+B;AAAA,8CAM9BA,QAAQ,CAACC,IANqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAvBC,uBAAuB;AAAA;AAAA;AAAA,GAA7B","sourcesContent":["import { githubApi } from 'api';\nimport { Repository } from 'models/Repository';\nimport { PaginatedResponse, searchParams } from 'types/utils';\n\nconst BASE_URL = '/repositories';\nexport const getPublicRepositories = async () => {\n  const response = await githubApi.get<Repository[]>(BASE_URL);\n  return response.data;\n};\n\nexport const getSearchedRepositories = async (params: searchParams) => {\n  const response = await githubApi.get<PaginatedResponse<Repository>>(`/search${BASE_URL}`, {\n    params: {\n      ...params,\n    },\n  });\n  return response.data;\n};\n"]},"metadata":{},"sourceType":"module"}