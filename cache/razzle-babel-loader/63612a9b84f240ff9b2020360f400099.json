{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moate\\\\OneDrive\\\\Desktop\\\\Tests\\\\github-app\\\\src\\\\client\\\\pages\\\\Home.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport { getSearchedRepositories } from 'client/actions/github';\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport { usePagination } from 'client/hooks/usePagination';\nimport { useAppDispatch } from 'client/_redux/app/store';\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Input, Pagination } from 'semantic-ui-react';\n\nvar Home = function Home() {\n  var _repositories$items;\n\n  var _useSelector = useSelector(function (state) {\n    return state.githubReducer;\n  }),\n      repositories = _useSelector.repositories,\n      loading = _useSelector.loading;\n\n  var dispatch = useAppDispatch();\n\n  var _usePagination = usePagination(),\n      handleNextPage = _usePagination.handleNextPage,\n      activePage = _usePagination.activePage;\n\n  var _useState = useState('q'),\n      keyword = _useState[0],\n      setKeyword = _useState[1];\n\n  var onSearch = useCallback(function (e) {\n    setKeyword(e.target.value);\n  }, []);\n  useEffect(function () {\n    dispatch(getSearchedRepositories({\n      q: keyword,\n      page: activePage\n    }));\n  }, [activePage, keyword]);\n  return __jsx(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Repositories\"), __jsx(Input, {\n    onChange: onSearch,\n    className: \"py-1\",\n    loading: loading,\n    placeholder: \"Search...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), __jsx(Card.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, repositories === null || repositories === void 0 ? void 0 : (_repositories$items = repositories.items) === null || _repositories$items === void 0 ? void 0 : _repositories$items.map(function (rep) {\n    var name = rep.name,\n        owner = rep.owner,\n        full_name = rep.full_name,\n        description = rep.description,\n        html_url = rep.html_url,\n        id = rep.id;\n    return __jsx(RepositoryCard, {\n      key: id,\n      name: name,\n      owner: owner,\n      full_name: full_name,\n      description: description,\n      html_url: html_url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    });\n  })), __jsx(\"div\", {\n    className: \"center py-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Pagination, {\n    onPageChange: handleNextPage,\n    defaultActivePage: activePage,\n    totalPages: totalPages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/pages/Home.tsx"],"names":["getSearchedRepositories","RepositoryCard","usePagination","useAppDispatch","React","useEffect","useCallback","useState","useSelector","Card","Input","Pagination","Home","state","githubReducer","repositories","loading","dispatch","handleNextPage","activePage","keyword","setKeyword","onSearch","e","target","value","q","page","items","map","rep","name","owner","full_name","description","html_url","id","totalPages"],"mappings":"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","sourcesContent":["import { getSearchedRepositories } from 'client/actions/github';\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport { usePagination } from 'client/hooks/usePagination';\nimport { RootState, useAppDispatch } from 'client/_redux/app/store';\nimport { Repository } from 'models/Repository';\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Input, Pagination } from 'semantic-ui-react';\n\nconst Home: React.FC = () => {\n  const { repositories, loading } = useSelector((state: RootState) => state.githubReducer);\n  const dispatch = useAppDispatch();\n\n  const { handleNextPage, activePage } = usePagination();\n  const [keyword, setKeyword] = useState('q');\n  const onSearch = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setKeyword(e.target.value);\n  }, []);\n  useEffect(() => {\n    dispatch(getSearchedRepositories({ q: keyword, page: activePage }));\n  }, [activePage, keyword]);\n  return (\n    <div className=\"App\">\n      <h1>Repositories</h1>\n      <Input onChange={onSearch} className=\"py-1\" loading={loading} placeholder=\"Search...\" />\n      <Card.Group>\n        {repositories?.items?.map((rep) => {\n          const { name, owner, full_name, description, html_url, id } = rep;\n          return (\n            <RepositoryCard key={id} {...{ name, owner, full_name, description, html_url }} />\n          );\n        })}\n      </Card.Group>\n      <div className=\"center py-1\">\n        <Pagination\n          onPageChange={handleNextPage}\n          defaultActivePage={activePage}\n          totalPages={totalPages}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}