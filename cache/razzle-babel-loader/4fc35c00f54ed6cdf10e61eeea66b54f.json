{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moate\\\\OneDrive\\\\Desktop\\\\Tests\\\\github-app\\\\src\\\\client\\\\components\\\\RepositoryCard.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Image } from 'semantic-ui-react';\nimport './_RepositoryCard.css';\n\nconst RepositoryCard = ({\n  name,\n  owner,\n  full_name,\n  description,\n  html_url\n}) => __jsx(Card, {\n  fluid: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, __jsx(Card.Content, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, __jsx(Image, {\n  floated: \"right\",\n  size: \"mini\",\n  src: owner.avatar_url,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }\n}), __jsx(Card.Header, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}, name), __jsx(Card.Meta, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, full_name), __jsx(Link, {\n  to: {\n    pathname: html_url\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n}, html_url), __jsx(Card.Description, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }\n}, description)));\n\nexport default RepositoryCard;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/components/RepositoryCard.tsx"],"names":["React","Link","Card","Image","RepositoryCard","name","owner","full_name","description","html_url","avatar_url","pathname"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AACA,OAAO,uBAAP;;AAEA,MAAMC,cAEL,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,WAA1B;AAAuCC,EAAAA;AAAvC,CAAD,KACF,MAAC,IAAD;AAAM,EAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,KAAD;AAAO,EAAA,OAAO,EAAC,OAAf;AAAuB,EAAA,IAAI,EAAC,MAA5B;AAAmC,EAAA,GAAG,EAAEH,KAAK,CAACI,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAcL,IAAd,CAFF,EAGE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAYE,SAAZ,CAHF,EAIE,MAAC,IAAD;AAAM,EAAA,EAAE,EAAE;AAAEI,IAAAA,QAAQ,EAAEF;AAAZ,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAmCA,QAAnC,CAJF,EAKE,MAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAmBD,WAAnB,CALF,CADF,CAHF;;AAaA,eAAeJ,cAAf","sourcesContent":["import { Repository } from 'models/Repository';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Image } from 'semantic-ui-react';\nimport './_RepositoryCard.css';\n\nconst RepositoryCard: React.FC<\n  Pick<Repository, 'name' | 'owner' | 'full_name' | 'description' | 'html_url'>\n> = ({ name, owner, full_name, description, html_url }) => (\n  <Card fluid>\n    <Card.Content>\n      <Image floated=\"right\" size=\"mini\" src={owner.avatar_url} />\n      <Card.Header>{name}</Card.Header>\n      <Card.Meta>{full_name}</Card.Meta>\n      <Link to={{ pathname: html_url }}>{html_url}</Link>\n      <Card.Description>{description}</Card.Description>\n    </Card.Content>\n  </Card>\n);\nexport default RepositoryCard;\n"]},"metadata":{},"sourceType":"module"}