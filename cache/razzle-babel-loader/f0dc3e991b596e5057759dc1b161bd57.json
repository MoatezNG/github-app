{"ast":null,"code":"import { useState } from 'react';\nexport const usePagination = () => {\n  const {\n    0: activePage,\n    1: setActivePage\n  } = useState(1);\n\n  const handleNextPage = (_, props) => {\n    setActivePage(props.activePage);\n  };\n\n  return {\n    handleNextPage,\n    activePage,\n    setActivePage\n  };\n};","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/hooks/usePagination.ts"],"names":["useState","usePagination","activePage","setActivePage","handleNextPage","_","props"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAGA,OAAO,MAAMC,aAAa,GAAG,MAIxB;AACH,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BH,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAMI,cAAc,GAAG,CAACC,CAAD,EAAyCC,KAAzC,KAAoE;AACzFH,IAAAA,aAAa,CAACG,KAAK,CAACJ,UAAP,CAAb;AACD,GAFD;;AAIA,SAAO;AACLE,IAAAA,cADK;AAELF,IAAAA,UAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD,CAhBM","sourcesContent":["import { useState } from 'react';\nimport { PaginationProps } from 'semantic-ui-react';\n\nexport const usePagination = (): {\n  handleNextPage: (_: React.MouseEvent<HTMLAnchorElement>, props: PaginationProps) => void;\n  activePage: number;\n  setActivePage: (value: React.SetStateAction<number>) => void;\n} => {\n  const [activePage, setActivePage] = useState(1);\n\n  const handleNextPage = (_: React.MouseEvent<HTMLAnchorElement>, props: PaginationProps) => {\n    setActivePage(props.activePage as number);\n  };\n\n  return {\n    handleNextPage,\n    activePage,\n    setActivePage,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}