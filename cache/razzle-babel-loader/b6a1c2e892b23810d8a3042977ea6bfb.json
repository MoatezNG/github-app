{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport const usePagination = (data, page, limit) => {\n  const {\n    0: pageIndex,\n    1: setPageIndex\n  } = useState(page);\n  const {\n    0: paginatedData,\n    1: setPaginatedData\n  } = useState([]);\n  useEffect(() => {\n    setPaginatedData(prevState => [...prevState, ...data.slice((pageIndex - 1) * limit, limit * pageIndex)]);\n  }, [pageIndex]);\n\n  const handleNextPage = () => {\n    setPageIndex(prevPage => prevPage + 1);\n  };\n\n  return {\n    paginatedData,\n    handleNextPage\n  };\n};","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/hooks/usePagination.ts"],"names":["useEffect","useState","usePagination","data","page","limit","pageIndex","setPageIndex","paginatedData","setPaginatedData","prevState","slice","handleNextPage","prevPage"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAC3BC,IAD2B,EAE3BC,IAF2B,EAG3BC,KAH2B,KAOxB;AACH,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAACG,IAAD,CAA1C;AACA,QAAM;AAAA,OAACI,aAAD;AAAA,OAAgBC;AAAhB,MAAoCR,QAAQ,CAAM,EAAN,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,gBAAgB,CAAEC,SAAD,IAAe,CAC9B,GAAGA,SAD2B,EAE9B,GAAGP,IAAI,CAACQ,KAAL,CAAW,CAACL,SAAS,GAAG,CAAb,IAAkBD,KAA7B,EAAoCA,KAAK,GAAGC,SAA5C,CAF2B,CAAhB,CAAhB;AAID,GALQ,EAKN,CAACA,SAAD,CALM,CAAT;;AAMA,QAAMM,cAAc,GAAG,MAAM;AAC3BL,IAAAA,YAAY,CAAEM,QAAD,IAAcA,QAAQ,GAAG,CAA1B,CAAZ;AACD,GAFD;;AAIA,SAAO;AAAEL,IAAAA,aAAF;AAAiBI,IAAAA;AAAjB,GAAP;AACD,CAtBM","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const usePagination = <T extends Record<string, any>>(\n  data: T[],\n  page: number,\n  limit: number,\n): {\n  paginatedData: T[];\n  handleNextPage: () => void;\n} => {\n  const [pageIndex, setPageIndex] = useState(page);\n  const [paginatedData, setPaginatedData] = useState<T[]>([]);\n\n  useEffect(() => {\n    setPaginatedData((prevState) => [\n      ...prevState,\n      ...data.slice((pageIndex - 1) * limit, limit * pageIndex),\n    ]);\n  }, [pageIndex]);\n  const handleNextPage = () => {\n    setPageIndex((prevPage) => prevPage + 1);\n  };\n\n  return { paginatedData, handleNextPage };\n};\n"]},"metadata":{},"sourceType":"module"}