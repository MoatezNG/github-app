{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Header, Image, Modal } from 'semantic-ui-react';\n\nvar RepositoryDetailsModal = function RepositoryDetailsModal(_ref) {\n  var repository = _ref.repository;\n  var avatar_url = repository.owner.avatar_url,\n      name = repository.name,\n      full_name = repository.full_name,\n      description = repository.description,\n      html_url = repository.html_url,\n      git_commits_url = repository.git_commits_url,\n      branches_url = repository.branches_url,\n      collaborators_url = repository.collaborators_url,\n      issues_url = repository.issues_url,\n      privateRepo = repository[\"private\"];\n  return __jsx(Modal.Content, {\n    image: true,\n    scrolling: true\n  }, __jsx(Image, {\n    size: \"medium\",\n    src: avatar_url,\n    wrapped: true\n  }), __jsx(Modal.Description, null, __jsx(Header, null, __jsx(\"h2\", null, name), __jsx(\"h5\", null, privateRepo ? 'Private' : 'Public')), __jsx(\"div\", null, full_name), __jsx(Link, {\n    to: {\n      pathname: html_url\n    },\n    target: \"_blank\"\n  }, html_url), __jsx(\"p\", null, description), __jsx(\"div\", null, \"Commits :\", __jsx(Link, {\n    to: {\n      pathname: git_commits_url\n    },\n    target: \"_blank\"\n  }, \" \".concat(git_commits_url))), __jsx(\"div\", null, \"Branches :\", __jsx(Link, {\n    to: {\n      pathname: branches_url\n    },\n    target: \"_blank\"\n  }, \" \".concat(branches_url))), __jsx(\"div\", null, \"Collaborators :\", __jsx(Link, {\n    to: {\n      pathname: collaborators_url\n    },\n    target: \"_blank\"\n  }, \" \".concat(collaborators_url))), __jsx(\"div\", null, \"Issues :\", __jsx(Link, {\n    to: {\n      pathname: issues_url\n    },\n    target: \"_blank\"\n  }, \" \".concat(issues_url)))));\n};\n\nexport default RepositoryDetailsModal;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/components/RepositoryDetailsModal.tsx"],"names":["React","Link","Header","Image","Modal","RepositoryDetailsModal","repository","avatar_url","owner","name","full_name","description","html_url","git_commits_url","branches_url","collaborators_url","issues_url","privateRepo","pathname"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,QAAqC,mBAArC;;AAKA,IAAMC,sBAA6D,GAAG,SAAhEA,sBAAgE,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACxF,MACWC,UADX,GAWID,UAXJ,CACEE,KADF,CACWD,UADX;AAAA,MAEEE,IAFF,GAWIH,UAXJ,CAEEG,IAFF;AAAA,MAGEC,SAHF,GAWIJ,UAXJ,CAGEI,SAHF;AAAA,MAIEC,WAJF,GAWIL,UAXJ,CAIEK,WAJF;AAAA,MAKEC,QALF,GAWIN,UAXJ,CAKEM,QALF;AAAA,MAMEC,eANF,GAWIP,UAXJ,CAMEO,eANF;AAAA,MAOEC,YAPF,GAWIR,UAXJ,CAOEQ,YAPF;AAAA,MAQEC,iBARF,GAWIT,UAXJ,CAQES,iBARF;AAAA,MASEC,UATF,GAWIV,UAXJ,CASEU,UATF;AAAA,MAUWC,WAVX,GAWIX,UAXJ;AAYA,SACE,MAAC,KAAD,CAAO,OAAP;AAAe,IAAA,KAAK,MAApB;AAAqB,IAAA,SAAS;AAA9B,KACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,GAAG,EAAEC,UAA1B;AAAsC,IAAA,OAAO;AAA7C,IADF,EAEE,MAAC,KAAD,CAAO,WAAP,QACE,MAAC,MAAD,QACE,kBAAKE,IAAL,CADF,EAEE,kBAAKQ,WAAW,GAAG,SAAH,GAAe,QAA/B,CAFF,CADF,EAKE,mBAAMP,SAAN,CALF,EAME,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEQ,MAAAA,QAAQ,EAAEN;AAAZ,KAAV;AAAkC,IAAA,MAAM,EAAC;AAAzC,KACGA,QADH,CANF,EASE,iBAAID,WAAJ,CATF,EAUE,gCAEE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEO,MAAAA,QAAQ,EAAEL;AAAZ,KAAV;AAAyC,IAAA,MAAM,EAAC;AAAhD,gBACOA,eADP,EAFF,CAVF,EAgBE,iCAEE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEK,MAAAA,QAAQ,EAAEJ;AAAZ,KAAV;AAAsC,IAAA,MAAM,EAAC;AAA7C,gBACOA,YADP,EAFF,CAhBF,EAsBE,sCAEE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEI,MAAAA,QAAQ,EAAEH;AAAZ,KAAV;AAA2C,IAAA,MAAM,EAAC;AAAlD,gBACOA,iBADP,EAFF,CAtBF,EA4BE,+BAEE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEG,MAAAA,QAAQ,EAAEF;AAAZ,KAAV;AAAoC,IAAA,MAAM,EAAC;AAA3C,gBACOA,UADP,EAFF,CA5BF,CAFF,CADF;AAwCD,CArDD;;AAuDA,eAAeX,sBAAf","sourcesContent":["import { Repository } from 'models/Repository';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Header, Image, Modal } from 'semantic-ui-react';\n\ninterface RepositoryDetailsModalProps {\n  repository: Repository;\n}\nconst RepositoryDetailsModal: React.FC<RepositoryDetailsModalProps> = ({ repository }) => {\n  const {\n    owner: { avatar_url },\n    name,\n    full_name,\n    description,\n    html_url,\n    git_commits_url,\n    branches_url,\n    collaborators_url,\n    issues_url,\n    private: privateRepo,\n  } = repository;\n  return (\n    <Modal.Content image scrolling>\n      <Image size=\"medium\" src={avatar_url} wrapped />\n      <Modal.Description>\n        <Header>\n          <h2>{name}</h2>\n          <h5>{privateRepo ? 'Private' : 'Public'}</h5>\n        </Header>\n        <div>{full_name}</div>\n        <Link to={{ pathname: html_url }} target=\"_blank\">\n          {html_url}\n        </Link>\n        <p>{description}</p>\n        <div>\n          Commits :\n          <Link to={{ pathname: git_commits_url }} target=\"_blank\">\n            {` ${git_commits_url}`}\n          </Link>\n        </div>\n        <div>\n          Branches :\n          <Link to={{ pathname: branches_url }} target=\"_blank\">\n            {` ${branches_url}`}\n          </Link>\n        </div>\n        <div>\n          Collaborators :\n          <Link to={{ pathname: collaborators_url }} target=\"_blank\">\n            {` ${collaborators_url}`}\n          </Link>\n        </div>\n        <div>\n          Issues :\n          <Link to={{ pathname: issues_url }} target=\"_blank\">\n            {` ${issues_url}`}\n          </Link>\n        </div>\n      </Modal.Description>\n    </Modal.Content>\n  );\n};\n\nexport default RepositoryDetailsModal;\n"]},"metadata":{},"sourceType":"module"}