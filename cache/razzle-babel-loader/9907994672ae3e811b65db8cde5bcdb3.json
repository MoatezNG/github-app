{"ast":null,"code":"import { useEffect, useState } from 'react';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport var usePagination = function usePagination(data, limit) {\n  var _useState = useState(1),\n      activePage = _useState[0],\n      setActivePage = _useState[1];\n\n  var _useState2 = useState([]),\n      paginatedData = _useState2[0],\n      setPaginatedData = _useState2[1];\n\n  useEffect(function () {\n    setPaginatedData(data.slice((activePage - 1) * limit, limit * activePage));\n  }, [activePage, data]);\n\n  var handleNextPage = function handleNextPage(_, props) {\n    setActivePage(props.activePage);\n  };\n\n  var resetPage = function resetPage() {\n    setActivePage(1);\n  };\n\n  return {\n    paginatedData: paginatedData,\n    handleNextPage: handleNextPage,\n    activePage: activePage,\n    totalPages: Math.ceil(data.length / limit)\n  };\n};","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/hooks/usePagination.ts"],"names":["useEffect","useState","usePagination","data","limit","activePage","setActivePage","paginatedData","setPaginatedData","slice","handleNextPage","_","props","resetPage","totalPages","Math","ceil","length"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAC3BC,IAD2B,EAE3BC,KAF2B,EAQxB;AACH,kBAAoCH,QAAQ,CAAC,CAAD,CAA5C;AAAA,MAAOI,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA0CL,QAAQ,CAAM,EAAN,CAAlD;AAAA,MAAOM,aAAP;AAAA,MAAsBC,gBAAtB;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,gBAAgB,CAACL,IAAI,CAACM,KAAL,CAAW,CAACJ,UAAU,GAAG,CAAd,IAAmBD,KAA9B,EAAqCA,KAAK,GAAGC,UAA7C,CAAD,CAAhB;AACD,GAFQ,EAEN,CAACA,UAAD,EAAaF,IAAb,CAFM,CAAT;;AAGA,MAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAyCC,KAAzC,EAAoE;AACzFN,IAAAA,aAAa,CAACM,KAAK,CAACP,UAAP,CAAb;AACD,GAFD;;AAIA,MAAMQ,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBP,IAAAA,aAAa,CAAC,CAAD,CAAb;AACD,GAFD;;AAIA,SAAO;AACLC,IAAAA,aAAa,EAAbA,aADK;AAELG,IAAAA,cAAc,EAAdA,cAFK;AAGLL,IAAAA,UAAU,EAAVA,UAHK;AAILS,IAAAA,UAAU,EAAEC,IAAI,CAACC,IAAL,CAAUb,IAAI,CAACc,MAAL,GAAcb,KAAxB;AAJP,GAAP;AAMD,CA7BM","sourcesContent":["import { useEffect, useState } from 'react';\nimport { PaginationProps } from 'semantic-ui-react';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const usePagination = <T extends Record<string, any>>(\n  data: T[],\n  limit: number,\n): {\n  paginatedData: T[];\n  handleNextPage: (_: React.MouseEvent<HTMLAnchorElement>, props: PaginationProps) => void;\n  activePage: number;\n  totalPages: number;\n} => {\n  const [activePage, setActivePage] = useState(1);\n  const [paginatedData, setPaginatedData] = useState<T[]>([]);\n\n  useEffect(() => {\n    setPaginatedData(data.slice((activePage - 1) * limit, limit * activePage));\n  }, [activePage, data]);\n  const handleNextPage = (_: React.MouseEvent<HTMLAnchorElement>, props: PaginationProps) => {\n    setActivePage(props.activePage as number);\n  };\n\n  const resetPage = () => {\n    setActivePage(1);\n  };\n\n  return {\n    paginatedData,\n    handleNextPage,\n    activePage,\n    totalPages: Math.ceil(data.length / limit),\n  };\n};\n"]},"metadata":{},"sourceType":"module"}