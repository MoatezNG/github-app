{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moate\\\\OneDrive\\\\Desktop\\\\Tests\\\\github-app\\\\src\\\\client\\\\pages\\\\Home.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport { getPublicRepositories } from 'client/actions/github';\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport { usePagination } from 'client/hooks/usePagination';\nimport { useAppDispatch } from 'client/_redux/app/store';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Pagination } from 'semantic-ui-react';\n\nvar Home = function Home() {\n  var _useSelector = useSelector(function (state) {\n    return state.githubReducer;\n  }),\n      repositories = _useSelector.repositories;\n\n  var dispatch = useAppDispatch();\n  useEffect(function () {\n    dispatch(getPublicRepositories());\n  }, []);\n\n  var _usePagination = usePagination(repositories, 3),\n      paginatedData = _usePagination.paginatedData,\n      handleNextPage = _usePagination.handleNextPage,\n      activePage = _usePagination.activePage,\n      totalPages = _usePagination.totalPages;\n\n  return __jsx(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, paginatedData.map(function (rep) {\n    var name = rep.name,\n        owner = rep.owner;\n    return __jsx(RepositoryCard, {\n      name: name,\n      owner: owner,\n      full_name: full_name,\n      description: description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    });\n  }), __jsx(Pagination, {\n    onPageChange: handleNextPage,\n    defaultActivePage: activePage,\n    totalPages: totalPages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/pages/Home.tsx"],"names":["getPublicRepositories","RepositoryCard","usePagination","useAppDispatch","React","useEffect","useSelector","Pagination","Home","state","githubReducer","repositories","dispatch","paginatedData","handleNextPage","activePage","totalPages","map","rep","name","owner","full_name","description"],"mappings":";;;;AAAA,SAASA,qBAAT,QAAsC,uBAAtC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAAoBC,cAApB,QAA0C,yBAA1C;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,GAAM;AAC3B,qBAAyBF,WAAW,CAAC,UAACG,KAAD;AAAA,WAAsBA,KAAK,CAACC,aAA5B;AAAA,GAAD,CAApC;AAAA,MAAQC,YAAR,gBAAQA,YAAR;;AACA,MAAMC,QAAQ,GAAGT,cAAc,EAA/B;AACAE,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,QAAQ,CAACZ,qBAAqB,EAAtB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,uBAAkEE,aAAa,CAC7ES,YAD6E,EAE7E,CAF6E,CAA/E;AAAA,MAAQE,aAAR,kBAAQA,aAAR;AAAA,MAAuBC,cAAvB,kBAAuBA,cAAvB;AAAA,MAAuCC,UAAvC,kBAAuCA,UAAvC;AAAA,MAAmDC,UAAnD,kBAAmDA,UAAnD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,aAAa,CAACI,GAAd,CAAkB,UAACC,GAAD,EAAS;AAC1B,QAAQC,IAAR,GAAwBD,GAAxB,CAAQC,IAAR;AAAA,QAAcC,KAAd,GAAwBF,GAAxB,CAAcE,KAAd;AACA,WAAO,MAAC,cAAD;AAAsBD,MAAAA,IAAI,EAAJA,IAAtB;AAA4BC,MAAAA,KAAK,EAALA,KAA5B;AAAmCC,MAAAA,SAAS,EAATA,SAAnC;AAA8CC,MAAAA,WAAW,EAAXA,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAHA,CADH,EAKE,MAAC,UAAD;AACE,IAAA,YAAY,EAAER,cADhB;AAEE,IAAA,iBAAiB,EAAEC,UAFrB;AAGE,IAAA,UAAU,EAAEC,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAaD,CAxBD;;AA0BA,eAAeR,IAAf","sourcesContent":["import { getPublicRepositories } from 'client/actions/github';\nimport RepositoryCard from 'client/components/RepositoryCard';\nimport { usePagination } from 'client/hooks/usePagination';\nimport { RootState, useAppDispatch } from 'client/_redux/app/store';\nimport { Repository } from 'models/Repository';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Pagination } from 'semantic-ui-react';\n\nconst Home: React.FC = () => {\n  const { repositories } = useSelector((state: RootState) => state.githubReducer);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getPublicRepositories());\n  }, []);\n\n  const { paginatedData, handleNextPage, activePage, totalPages } = usePagination<Repository>(\n    repositories,\n    3,\n  );\n  return (\n    <div className=\"App\">\n      {paginatedData.map((rep) => {\n        const { name, owner } = rep;\n        return <RepositoryCard {...{ name, owner, full_name, description }} />;\n      })}\n      <Pagination\n        onPageChange={handleNextPage}\n        defaultActivePage={activePage}\n        totalPages={totalPages}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}