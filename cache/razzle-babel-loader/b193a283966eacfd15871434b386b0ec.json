{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moate\\\\OneDrive\\\\Desktop\\\\Tests\\\\github-app\\\\src\\\\client\\\\components\\\\RepositoryCard.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Icon, Image } from 'semantic-ui-react';\n\nconst RepositoryCard = ({\n  repository: {\n    name,\n    owner,\n    full_name,\n    description,\n    id,\n    html_url,\n    marked\n  },\n  onFavorite\n}) => __jsx(Card, {\n  fluid: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }\n}, __jsx(Card.Content, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, __jsx(Image, {\n  floated: \"right\",\n  size: \"mini\",\n  src: owner.avatar_url,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }\n}), __jsx(Card.Header, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}, __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }\n}, __jsx(Icon, {\n  bordered: true,\n  color: marked ? 'yellow' : 'teal',\n  onClick: () => onFavorite(id),\n  name: \"star\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 11\n  }\n}), name)), __jsx(Card.Meta, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }\n}, full_name), __jsx(Link, {\n  to: {\n    pathname: html_url\n  },\n  target: \"_blank\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }\n}, html_url), __jsx(Card.Description, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }\n}, description)));\n\nexport default RepositoryCard;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/github-app/src/client/components/RepositoryCard.tsx"],"names":["React","Link","Card","Icon","Image","RepositoryCard","repository","name","owner","full_name","description","id","html_url","marked","onFavorite","avatar_url","pathname"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,mBAAlC;;AAMA,MAAMC,cAA6C,GAAG,CAAC;AACrDC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA,WAA1B;AAAuCC,IAAAA,EAAvC;AAA2CC,IAAAA,QAA3C;AAAqDC,IAAAA;AAArD,GADyC;AAErDC,EAAAA;AAFqD,CAAD,KAIpD,MAAC,IAAD;AAAM,EAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,KAAD;AAAO,EAAA,OAAO,EAAC,OAAf;AAAuB,EAAA,IAAI,EAAC,MAA5B;AAAmC,EAAA,GAAG,EAAEN,KAAK,CAACO,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AACE,EAAA,QAAQ,MADV;AAEE,EAAA,KAAK,EAAEF,MAAM,GAAG,QAAH,GAAc,MAF7B;AAGE,EAAA,OAAO,EAAE,MAAMC,UAAU,CAACH,EAAD,CAH3B;AAIE,EAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAOGJ,IAPH,CADF,CAFF,EAcE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAYE,SAAZ,CAdF,EAeE,MAAC,IAAD;AAAM,EAAA,EAAE,EAAE;AAAEO,IAAAA,QAAQ,EAAEJ;AAAZ,GAAV;AAAkC,EAAA,MAAM,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,QADH,CAfF,EAkBE,MAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAmBF,WAAnB,CAlBF,CADF,CAJF;;AA4BA,eAAeL,cAAf","sourcesContent":["import { Repository } from 'models/Repository';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Icon, Image } from 'semantic-ui-react';\n\ninterface RepositoryCardProps {\n  repository: Repository;\n  onFavorite: (id: number) => void;\n}\nconst RepositoryCard: React.FC<RepositoryCardProps> = ({\n  repository: { name, owner, full_name, description, id, html_url, marked },\n  onFavorite,\n}) => (\n  <Card fluid>\n    <Card.Content>\n      <Image floated=\"right\" size=\"mini\" src={owner.avatar_url} />\n      <Card.Header>\n        <div>\n          <Icon\n            bordered\n            color={marked ? 'yellow' : 'teal'}\n            onClick={() => onFavorite(id)}\n            name=\"star\"\n          />\n          {name}\n        </div>\n      </Card.Header>\n\n      <Card.Meta>{full_name}</Card.Meta>\n      <Link to={{ pathname: html_url }} target=\"_blank\">\n        {html_url}\n      </Link>\n      <Card.Description>{description}</Card.Description>\n    </Card.Content>\n  </Card>\n);\n\nexport default RepositoryCard;\n"]},"metadata":{},"sourceType":"module"}